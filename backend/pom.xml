<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>org</groupId>
	<artifactId>EngineeringWork</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>EngineeringWork</name>
	<description>ebowa/mobilna do planowania podróży. Aplikacja przy wykorzystaniu SkyScanner API (dla znajdowania ścieżek lotniczych) oraz Google API (dla znajdowania ścieżek naziemnych) ma wyszukiwać optymalną trasę pomiędzy miastem wylotu, wszystkimi miastami do zwiedzenia i miastem powrotu. Kryteria wyszukiwania tras mają obejmować m.in: - listę miast, z których może rozpocząć się podróż, - listę miast, w których podróż może się zakończyć, - najwcześniejszą datę rozpoczęcia podróży, - najpóźniejszą datę zakończenia podróż, - minimalną i maksymalną liczbę dni podróży, - listę miast, które podróż ma uwzględnić (odwiedzić) oraz liczbę dni spędzoną w tych miastach.</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>1.5.5.Final</version>
		</dependency>
		<dependency>
			<groupId>com.diffplug.spotless</groupId>
			<artifactId>spotless-maven-plugin</artifactId>
			<version>2.41.1</version>
		</dependency>
		<dependency>
			<groupId>com.rudikershaw.gitbuildhook</groupId>
			<artifactId>git-build-hook-maven-plugin</artifactId>
			<version>3.1.0</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<!-- IMPORTANT - LOMBOK BEFORE MAPSTRUCT -->
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>1.5.5.Final</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>2.41.1</version>
				<configuration>
					<!-- Java formatter -->
					<java>
						<!-- These are the defaults, you can override if you want -->
						<includes>
							<include>src/main/java/**/*.java</include>
							<include>src/test/java/**/*.java</include>
						</includes>

						<palantirJavaFormat>
							<version>2.39.0</version>
							<style>PALANTIR</style>
						</palantirJavaFormat>

						<importOrder/>
						<!-- standard import order -->

						<removeUnusedImports/>

						<formatAnnotations/>
						<!-- fixes formatting of type annotations -->

					</java>

					<!--Maven POM formatter-->
					<pom>
						<includes>
							<include>pom.xml</include>
						</includes>
						<sortPom>
							<expandEmptyElements>false</expandEmptyElements>
						</sortPom>
					</pom>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>apply</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.rudikershaw.gitbuildhook</groupId>
				<artifactId>git-build-hook-maven-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<installHooks>
						<pre-commit>hooks/pre-commit</pre-commit>
					</installHooks>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>install</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>

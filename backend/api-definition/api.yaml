openapi: '3.0.0'
info:
  title: 'API'
  version: '1.0.0'

servers:
  - url: 'http://localhost:8080/api'

paths:
  /user:
    get:
      summary: 'Receives users info'
      operationId: 'list users'
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
      responses:
        200:
          $ref: '#/components/responses/userInfoPageResponse'
    post:
      summary: 'Creates a new user'
      operationId: 'create user'
      requestBody:
        $ref: '#/components/requestBodies/userCreation'
      responses:
        200:
          $ref: '#/components/responses/userInfoResponse'
        400:
          $ref: '#/components/responses/validationException'
  /user/{userId}:
    get:
      summary: 'Returns a user info found by its id'
      operationId: 'find user'
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        200:
          $ref: '#/components/responses/userInfoResponse'
        404:
          $ref: '#/components/responses/notFoundException'
    delete:
      summary: 'Deletes a user by its id'
      operationId: 'delete user'
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        200:
          $ref: '#/components/responses/emptySuccessfulResponse'
        404:
          $ref: '#/components/responses/notFoundException'

  /search:
    post:
      operationId: 'search'
      summary: 'Searches for trip'
      requestBody:
        $ref: '#/components/requestBodies/searchRequest'
      responses:
        200:
          $ref: '#/components/responses/searchResponse'
        422:
          $ref: '#/components/responses/validationException'
  /searchList/{userId}:
    get:
      summary: 'Receives user search list (paged)'
      operationId: 'list user search'
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/optimizationCriteria'
        - $ref: '#/components/parameters/preferredTransports'
        - $ref: '#/components/parameters/saveDate'
        - $ref: '#/components/parameters/searchTags'
      responses:
        200:
          $ref: '#/components/responses/searchPage'
    post:
      summary: 'Saves user search'
      operationId: 'save search'
      parameters:
        - $ref: '#/components/parameters/userId'
      requestBody:
        $ref: '#/components/requestBodies/search'
      responses:
        200:
          $ref: '#/components/responses/search'
        422:
          $ref: '#/components/responses/validationException'
        409:
          $ref: '#/components/responses/conflictException'
  /searchList/{userId}/name/{searchName}:
    get:
      summary: 'Returns user search found by search name'
      operationId: 'find user search by name'
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/searchName'
      responses:
        200:
          $ref: '#/components/responses/search'
        404:
          $ref: '#/components/responses/notFoundException'
  /searchList/{userId}/{searchId}:
    get:
      summary: 'Returns user search found by search id'
      operationId: 'find user search'
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/searchId'
      responses:
        200:
          $ref: '#/components/responses/search'
        404:
          $ref: '#/components/responses/notFoundException'
    put:
      summary: 'Updates user search'
      operationId: 'update search'
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/searchId'
      requestBody:
        $ref: '#/components/requestBodies/searchUpdating'
      responses:
        200:
          $ref: '#/components/responses/search'
        404:
          $ref: '#/components/responses/notFoundException'
    delete:
      summary: 'Deletes user search'
      operationId: 'delete search'
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/searchId'
      responses:
        200:
          $ref: '#/components/responses/emptySuccessfulResponse'
        404:
          $ref: '#/components/responses/notFoundException'

  /tripList/{userId}:
    get:
      summary: 'Receives user trip list (paged)'
      operationId: 'list user trip'
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/saveDate'
        - $ref: '#/components/parameters/tripTags'
      responses:
        200:
          $ref: '#/components/responses/tripPage'
    post:
      summary: 'Saves user trip'
      operationId: 'save trip'
      parameters:
        - $ref: '#/components/parameters/userId'
      requestBody:
        $ref: '#/components/requestBodies/trip'
      responses:
        200:
          $ref: '#/components/responses/trip'
        422:
          $ref: '#/components/responses/validationException'
        409:
          $ref: '#/components/responses/conflictException'
  /tripList/{userId}/id/{tripId}:
    get:
      summary: 'Returns user trip found by trip id'
      operationId: 'find user trip'
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/tripId'
      responses:
        200:
          $ref: '#/components/responses/trip'
        404:
          $ref: '#/components/responses/notFoundException'
    put:
      summary: 'Updates user trip'
      operationId: 'update trip'
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/tripId'
      requestBody:
        $ref: '#/components/requestBodies/tripUpdating'
      responses:
        200:
          $ref: '#/components/responses/trip'
        404:
          $ref: '#/components/responses/notFoundException'
    delete:
      summary: 'Deletes user trip'
      operationId: 'delete trip'
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/tripId'
      responses:
        200:
          $ref: '#/components/responses/emptySuccessfulResponse'
        404:
          $ref: '#/components/responses/notFoundException'
  /tripList/{userId}/name/{tripName}:
    get:
      summary: 'Returns trip search found by trip name'
      operationId: 'find user trip by name'
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/tripName'
      responses:
        200:
          $ref: '#/components/responses/trip'
        404:
          $ref: '#/components/responses/notFoundException'
  /searchTag/{userId}:
    get:
      summary: 'Receives user search tags'
      operationId: 'list user search tags'
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        200:
          $ref: '#/components/responses/searchTags'
  /searchTag/{userId}/{searchTagId}:
    put:
      summary: 'Updates user search tag'
      operationId: 'update user search tag'
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/searchTagId'
      requestBody:
        $ref: '#/components/requestBodies/searchTagUpdating'
      responses:
        200:
          $ref: '#/components/responses/searchTag'
        404:
          $ref: '#/components/responses/notFoundException'
    delete:
      summary: 'Deletes user search tag'
      operationId: 'delete user search tag'
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/searchTagId'
      responses:
        200:
          $ref: '#/components/responses/emptySuccessfulResponse'
        404:
          $ref: '#/components/responses/notFoundException'
  /tripTag/{userId}:
    get:
      summary: 'Receives user trip tags'
      operationId: 'list user trip tags'
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        200:
          $ref: '#/components/responses/tripTags'
  /tripTag/{userId}/{tripTagId}:
    put:
      summary: 'Updates user trip tag'
      operationId: 'update user trip tag'
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/tripTagId'
      requestBody:
        $ref: '#/components/requestBodies/tripTagUpdating'
      responses:
        200:
          $ref: '#/components/responses/tripTag'
        404:
          $ref: '#/components/responses/notFoundException'
    delete:
      summary: 'Deletes user trip tag'
      operationId: 'delete user trip tag'
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/tripTagId'
      responses:
        200:
          $ref: '#/components/responses/emptySuccessfulResponse'
        404:
          $ref: '#/components/responses/notFoundException'

components:
  parameters:
    userId:
      name: userId
      in: path
      required: true
      schema:
        type: integer
    searchId:
      name: searchId
      in: path
      required: true
      schema:
        type: integer
    searchName:
      name: searchName
      in: path
      required: true
      schema:
        type: string
    tripId:
      name: tripId
      in: path
      required: true
      schema:
        type: integer
    tripName:
      name: tripName
      in: path
      required: true
      schema:
        type: string
    page:
      name: page
      description: 'The number of page to be returned'
      in: query
      required: false
      schema:
        type: integer
        default: 0
    size:
      name: size
      description: 'The size of page to be returned'
      in: query
      required: false
      schema:
        type: integer
        default: 5
    optimizationCriteria:
      name: optimizationCriteria
      description: 'optimization criteria to filter search list'
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/criteriaMode'
    preferredTransports:
      name: preferredTransports
      description: 'preferred transports to filter search list'
      in: query
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/transportMode'
    saveDate:
      name: saveDate
      description: 'save date to filter search and trip list'
      in: query
      required: false
      schema:
        type: string
        format: date
    searchTags:
      name: searchTags
      description: 'Tags to filter search list'
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          minLength: 1
    tripTags:
      name: tripTags
      description: 'Tags to filter trip list'
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          minLength: 1
    searchTagId:
      name: searchTagId
      in: path
      required: true
      schema:
        type: integer
    tripTagId:
      name: tripTagId
      in: path
      required: true
      schema:
        type: integer


  requestBodies:
    userCreation:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/userCreation'
    search:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/search'
    searchRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/searchRequest'
    searchUpdating:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/searchUpdating'
    tripUpdating:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tripUpdating'
    trip:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/trip'
    searchTagUpdating:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tagUpdating'
    tripTagUpdating:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tagUpdating'

  responses:
    userInfoPageResponse:
      description: 'Page of users matching specified filtering and paging criteria'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/userInfoPage'
    userInfoResponse:
      description: 'Created user'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/userInfo'
    searchPage:
      description: 'Page of user searches'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/searchPage'
    search:
      description: 'User saved search'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/search'
    tripPage:
      description: 'Page of user trips'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tripPage'
    trip:
      description: 'user saved trip'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/trip'
    searchResponse:
      description: 'Search result'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/searchResponse'
    searchTags:
      description: 'User search tags'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/searchTag'
    searchTag:
      description: 'User search tag'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/searchTag'
    tripTags:
      description: 'User trip tags'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/tripTag'
    tripTag:
      description: 'User trip tag'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tripTag'
    emptySuccessfulResponse:
      description: 'Operation succeeded'
    notFoundException:
      description: 'Not Found Exception'
    validationException:
      description: 'Validation Exception'
    conflictException:
      description: 'Conflict Exception'

  schemas:
    transfer:
      type: object
      required:
          - startDateTime
          - endDateTime
          - carrier
          - transportMode
          - duration
          - transferOrder
          - startAddress
          - endAddress
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        carrier:
          type: string
          minLength: 1
        transportMode:
          $ref: '#/components/schemas/transportMode'
        cost:
          type: number
          minimum: 0
        duration:
          description: 'Duration in minutes'
          type: integer
          minimum: 0
        transferOrder:
          type: integer
          minimum: 1
        startAddress:
          type: string
          minLength: 1
        endAddress:
          type: string
          minLength: 1

    placeInSearch:
      type: object
      required:
        - country
        - city
      properties:
        country:
          type: string
          minLength: 1
        city:
          type: string
          minLength: 1
        stayDuration:
          type: integer
          minimum: 0
        entryOrder:
          type: integer
          minimum: 1

    placeInTrip:
      type: object
      required:
        - country
        - city
        - isTransfer
        - stayDuration
        - visitOrder
      properties:
        country:
          type: string
          minLength: 1
        city:
          type: string
          minLength: 1
        isTransfer:
          type: boolean
        stayDuration:
          type: integer
          minimum: 0
        visitOrder:
          type: integer
          minimum: 1

    searchRequest:
      type: object
      properties:
        placesToVisit:
          type: array
          items:
            $ref: '#/components/schemas/placeInSearch'
        passengerCount:
          type: integer
          minimum: 1
        maxTripDuration:
          type: integer
          minimum: 0
        tripStartDate:
          type: string
          format: date
        preferredTransport:
          $ref: '#/components/schemas/transportMode'
        optimizationCriteria:
          $ref: '#/components/schemas/criteriaMode'
      required:
        - passengerCount
        - tripStartDate
        - optimizationCriteria
        - maxTripDuration

    search:
      type: object
      required:
        - name
        - tags
        - passengerCount
        - tripStartDate
        - optimizationCriteria
        - maxTripDuration
      properties:
        id:
          type: integer
        name:
          type: string
          minLength: 1
        saveDate:
          type: string
          format: date
        tags:
          type: array
          items:
            type: string
            minLength: 1
        placesToVisit:
          type: array
          items:
            $ref: '#/components/schemas/placeInSearch'
        passengerCount:
          type: integer
          minimum: 1
        maxTripDuration:
          type: integer
          minimum: 0
        tripStartDate:
          type: string
          format: date
        preferredTransport:
          $ref: '#/components/schemas/transportMode'
        optimizationCriteria:
          $ref: '#/components/schemas/criteriaMode'

    trip:
      type: object
      required:
        - startDate
        - endDate
        - name
        - tags
        - passengerCount
        - totalTransferTime
        - duration
        - transfers
        - places
      properties:
        id:
          type: integer
        name:
          type: string
          minLength: 1
        saveDate:
          type: string
          format: date
        tags:
          type: array
          items:
            type: string
            minLength: 1
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        passengerCount:
          type: integer
          minimum: 1
        totalCost:
          type: number
          minimum: 0
        totalTransferTime:
          type: integer
          minimum: 0
        duration:
          type: integer
          minimum: 0
        transfers:
          type: array
          items:
            $ref: '#/components/schemas/transfer'
          minItems: 1
        places:
          type: array
          items:
            $ref: '#/components/schemas/placeInTrip'
          minItems: 2

    criteriaMode:
      type: string
      enum:
        - PRICE
        - DURATION
    transportMode:
      type: string
      enum:
        - BUS
        - TRAIN
        - PLANE
    searchPageElements:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/search'
    tripPageElements:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/trip'
    searchUpdating:
      type: object
      required:
        - name
        - tags
      properties:
        name:
          type: string
          minLength: 1
        tags:
          type: array
          items:
            type: string
            minLength: 1
    tripUpdating:
      type: object
      required:
        - name
        - tags
      properties:
        name:
          type: string
          minLength: 1
        tags:
          type: array
          items:
            type: string
            minLength: 1
    userCreation:
      type: object
      required:
        - email
      properties:
        email:
          type: string
    userInfo:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
    userInfoPage:
      type: object
      allOf:
        - $ref: '#/components/schemas/paged'
        - $ref: '#/components/schemas/userInfoPageElements'
    searchPage:
      type: object
      allOf:
        - $ref: '#/components/schemas/paged'
        - $ref: '#/components/schemas/searchPageElements'
    tripPage:
      type: object
      allOf:
        - $ref: '#/components/schemas/paged'
        - $ref: '#/components/schemas/tripPageElements'
    searchResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/trip'
    searchTag:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    tripTag:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    tagUpdating:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    paged:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/pageInfo'
        totalElements:
          type: integer
        totalPages:
          type: integer
    pageInfo:
      type: object
      properties:
        number:
          type: integer
        size:
          type: integer
    userInfoPageElements:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/userInfo'